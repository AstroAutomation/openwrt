Index: compat-wireless-2016-01-10/drivers/net/wireless/ralink/rt2x00/rt2800.h
===================================================================
--- compat-wireless-2016-01-10.orig/drivers/net/wireless/ralink/rt2x00/rt2800.h	2017-05-15 02:48:01.326150947 +0000
+++ compat-wireless-2016-01-10/drivers/net/wireless/ralink/rt2x00/rt2800.h	2017-05-15 02:48:01.322150947 +0000
@@ -94,6 +94,7 @@
 #define REV_RT3090E			0x0211
 #define REV_RT3390E			0x0211
 #define REV_RT3593E			0x0211
+#define REV_RT5350F			0x0105
 #define REV_RT5390F			0x0502
 #define REV_RT5390R			0x1502
 #define REV_RT5592C			0x0221
Index: compat-wireless-2016-01-10/drivers/net/wireless/ralink/rt2x00/rt2800lib.c
===================================================================
--- compat-wireless-2016-01-10.orig/drivers/net/wireless/ralink/rt2x00/rt2800lib.c	2017-05-15 02:48:01.326150947 +0000
+++ compat-wireless-2016-01-10/drivers/net/wireless/ralink/rt2x00/rt2800lib.c	2017-05-15 03:27:02.662150947 +0000
@@ -3583,6 +3583,10 @@
 			rt2800_bbp_write(rt2x00dev, 86, 0x46);
 		else
 			rt2800_bbp_write(rt2x00dev, 86, 0);
+	} else if (rt2x00_rt(rt2x00dev, RT5350)) {
+		rt2800_bbp_write(rt2x00dev, 62, 0x37 - rt2x00dev->lna_gain);
+		rt2800_bbp_write(rt2x00dev, 63, 0x37 - rt2x00dev->lna_gain);
+		rt2800_bbp_write(rt2x00dev, 64, 0x37 - rt2x00dev->lna_gain);
 	} else {
 		rt2800_bbp_write(rt2x00dev, 62, 0x37 - rt2x00dev->lna_gain);
 		rt2800_bbp_write(rt2x00dev, 63, 0x37 - rt2x00dev->lna_gain);
@@ -3598,7 +3602,8 @@
 				rt2800_bbp_write(rt2x00dev, 82, 0x62);
 				rt2800_bbp_write(rt2x00dev, 75, 0x46);
 			} else {
-				if (rt2x00_rt(rt2x00dev, RT3593))
+				if (rt2x00_rt(rt2x00dev, RT3593) ||
+				    rt2x00_rt(rt2x00dev, RT5350))
 					rt2800_bbp_write(rt2x00dev, 82, 0x62);
 				else
 					rt2800_bbp_write(rt2x00dev, 82, 0x84);
@@ -5735,6 +5740,10 @@
 
 static void rt2800_init_bbp_3352(struct rt2x00_dev *rt2x00dev)
 {
+	int ant, div_mode;
+	u16 eeprom;
+	u8 value;
+	
 	rt2800_bbp_write(rt2x00dev, 3, 0x00);
 	rt2800_bbp_write(rt2x00dev, 4, 0x50);
 
@@ -5785,6 +5794,8 @@
 	if (rt2x00_rt(rt2x00dev, RT5350)) {
 		rt2800_bbp_write(rt2x00dev, 105, 0x3c);
 		rt2800_bbp_write(rt2x00dev, 106, 0x03);
+
+		rt2800_bbp_write(rt2x00dev, 128, 0x12);
 	} else {
 		rt2800_bbp_write(rt2x00dev, 105, 0x34);
 		rt2800_bbp_write(rt2x00dev, 106, 0x05);
@@ -5815,10 +5826,31 @@
 	rt2800_bbp_write(rt2x00dev, 148, 0xc8);
 
 	if (rt2x00_rt(rt2x00dev, RT5350)) {
-		rt2800_bbp_write(rt2x00dev, 150, 0x40); /* Antenna Software OFDM */
-		rt2800_bbp_write(rt2x00dev, 151, 0x30); /* Antenna Software CCK */
-		rt2800_bbp_write(rt2x00dev, 152, 0xa3);
+		rt2800_disable_unused_dac_adc(rt2x00dev);
+
+		rt2800_eeprom_read(rt2x00dev, EEPROM_NIC_CONF1, &eeprom);
+		div_mode = rt2x00_get_field16(eeprom, EEPROM_NIC_CONF1_ANT_DIVERSITY);
+		ant = (div_mode == 3 || div_mode == 0) ? 1 : 0;
+
+		/* This chip has hardware antenna diversity*/
+		if (rt2x00_rt_rev_gte(rt2x00dev, RT5350, REV_RT5350F) && div_mode == 1) {
+			rt2800_bbp_write(rt2x00dev, 150, 0); /* Disable Antenna Software OFDM */
+			rt2800_bbp_write(rt2x00dev, 151, 0); /* Disable Antenna Software CCK */
+		} else {
+			rt2800_bbp_write(rt2x00dev, 150, 0x40); /* Antenna Software OFDM */
+			rt2800_bbp_write(rt2x00dev, 151, 0x30); /* Antenna Software CCK */
+		}
+		
 		rt2800_bbp_write(rt2x00dev, 154, 0); /* Clear previously selected antenna */
+
+		value = 0xa3; //rt2800_bbp_read(rt2x00dev, 152, &value);
+		if (ant == 0)
+			rt2x00_set_field8(&value, BBP152_RX_DEFAULT_ANT, 1);
+		else
+			rt2x00_set_field8(&value, BBP152_RX_DEFAULT_ANT, 0);
+		rt2800_bbp_write(rt2x00dev, 152, value);
+
+		rt2800_init_freq_calibration(rt2x00dev);
 	}
 }
 
@@ -7115,16 +7147,16 @@
 
 static void rt2800_init_rfcsr_5350(struct rt2x00_dev *rt2x00dev)
 {
-	rt2800_rfcsr_write(rt2x00dev, 0, 0xf0);
-	rt2800_rfcsr_write(rt2x00dev, 1, 0x23);
+	rt2800_rfcsr_write(rt2x00dev, 0, 0x20);
+	rt2800_rfcsr_write(rt2x00dev, 1, 0x07);
 	rt2800_rfcsr_write(rt2x00dev, 2, 0x50);
 	rt2800_rfcsr_write(rt2x00dev, 3, 0x08);
-	rt2800_rfcsr_write(rt2x00dev, 4, 0x49);
+	rt2800_rfcsr_write(rt2x00dev, 4, 0x4b);
 	rt2800_rfcsr_write(rt2x00dev, 5, 0x10);
 	rt2800_rfcsr_write(rt2x00dev, 6, 0xe0);
 	rt2800_rfcsr_write(rt2x00dev, 7, 0x00);
-	rt2800_rfcsr_write(rt2x00dev, 8, 0xf1);
-	rt2800_rfcsr_write(rt2x00dev, 9, 0x02);
+	rt2800_rfcsr_write(rt2x00dev, 8, 0xe2);
+	rt2800_rfcsr_write(rt2x00dev, 9, 0x14);
 	rt2800_rfcsr_write(rt2x00dev, 10, 0x53);
 	rt2800_rfcsr_write(rt2x00dev, 11, 0x4a);
 	rt2800_rfcsr_write(rt2x00dev, 12, 0x46);
@@ -7180,7 +7212,7 @@
 	rt2800_rfcsr_write(rt2x00dev, 60, 0x45);
 	rt2800_rfcsr_write(rt2x00dev, 61, 0xd1);
 	rt2800_rfcsr_write(rt2x00dev, 62, 0x00);
-	rt2800_rfcsr_write(rt2x00dev, 63, 0x00);
+	rt2800_rfcsr_write(rt2x00dev, 63, 0x07);
 }
 
 static void rt2800_init_rfcsr_5390(struct rt2x00_dev *rt2x00dev)
@@ -7881,12 +7913,18 @@
 	if (rt2x00_rt(rt2x00dev, RT3070) ||
 	    rt2x00_rt(rt2x00dev, RT3090) ||
 	    rt2x00_rt(rt2x00dev, RT3352) ||
-	    rt2x00_rt(rt2x00dev, RT3390)) {
+	    rt2x00_rt(rt2x00dev, RT3390) ||
+	    rt2x00_rt(rt2x00dev, RT5350)) {
 		value = rt2x00_get_field16(eeprom,
 				EEPROM_NIC_CONF1_ANT_DIVERSITY);
 		switch (value) {
 		case 0:
 		case 1:
+			if (rt2x00_rt_rev_gte(rt2x00dev, RT5350, REV_RT5350F)) {
+				rt2x00dev->default_ant.tx = ANTENNA_HW_DIVERSITY; /* Unused */
+				rt2x00dev->default_ant.rx = ANTENNA_HW_DIVERSITY; /* Unused */
+				break;
+			}
 		case 2:
 			rt2x00dev->default_ant.tx = ANTENNA_A;
 			rt2x00dev->default_ant.rx = ANTENNA_A;
